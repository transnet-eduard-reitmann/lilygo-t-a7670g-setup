name: Build Examples with PlatformIO

# Triggers the workflow on push or pull request events
on: [push, pull_request, workflow_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        modem: [
            # LILYGO Boards
            TINY_GSM_MODEM_A7608,
            TINY_GSM_MODEM_A7670,
            TINY_GSM_MODEM_SIM7672,
            TINY_GSM_MODEM_A76XXSSL,
            # TINY_GSM_MODEM_SIM7000,
            # TINY_GSM_MODEM_SIM7000SSL,
            # TINY_GSM_MODEM_SIM7070,
            # TINY_GSM_MODEM_SIM7600,
            # TINY_GSM_MODEM_SIM7020,
            # Other boards from original forks
            # TINY_GSM_MODEM_A6,
            # TINY_GSM_MODEM_BG96,
            # TINY_GSM_MODEM_M95,
            # TINY_GSM_MODEM_M590,
            # TINY_GSM_MODEM_MC60,
            # TINY_GSM_MODEM_SIM800,
            # TINY_GSM_MODEM_SIM808,
            # TINY_GSM_MODEM_SIM5360,
            # TINY_GSM_MODEM_UBLOX,
            # TINY_GSM_MODEM_SARAR4,
            # TINY_GSM_MODEM_XBEE,
            # TINY_GSM_MODEM_SEQUANS_MONARCH,
            # Disabled boards - not supported by Lilygo
            # Tests are not passive with these
            # TINY_GSM_MODEM_ESP8266,
          ]
        example:
          [
            examples/BlynkClient/BlynkClient.ino,
            examples/FileDownload/FileDownload.ino,
            examples/MqttClient/MqttClient.ino,
            examples/WebClient/WebClient.ino,
            tools/test_build/test_build.ino,
            tools/Diagnostics/Diagnostics.ino,
          ]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      # This should be pulled from cache, if there's not a new version
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio

      - name: Restore or Cache Platforms and Libraries
        uses: actions/cache@v4
        id: cache_pio
        with:
          path: ~/.platformio
          # if nothing in the example_dependencies.json file has changed, then it will
          # be a "cache hit" and we can restore libraries from cache and not
          # download them.  If it has changed we have to re-download.
          key: ${{ hashFiles('./examples/example_dependencies.json') }}

      # Install cores and library dependencies for the Arduino CLI, iff no cache
      - name: Install the Arduino libraries
        run: pio lib --global install 89 415 1202 1286

      - name: Run PlatformIO
        run: |
          sed -i 's/#define TINY_GSM_MODEM_SIM800/\/\/ #define TINY_GSM_MODEM_SIM800/g' "${{ matrix.example }}"
          platformio ci "${{ matrix.example }}" -l '.' --project-option='build_flags=-D ${{ matrix.modem }}' --project-option='lib_deps=89, 415, 1202, 1286' --project-option='framework=arduino' --board=esp32dev --board=esp32s3box
